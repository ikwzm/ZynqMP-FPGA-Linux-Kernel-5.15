--- linux-5.15.36/Documentation/devicetree/bindings/mfd/syscon.yaml	2023-04-14 12:25:42.486352900 +0900
+++ linux-xlnx-2022.2/Documentation/devicetree/bindings/mfd/syscon.yaml	2023-04-14 12:23:49.472299100 +0900
@@ -55,6 +55,7 @@
               - samsung,exynos4-sysreg
               - samsung,exynos5-sysreg
               - samsung,exynos5433-sysreg
+              - xlnx,zynqmp-dpaud-setting
 
           - const: syscon
 
--- linux-5.15.36/include/linux/mfd/syscon/xlnx-vcu.h	2023-04-14 12:26:11.380098400 +0900
+++ linux-xlnx-2022.2/include/linux/mfd/syscon/xlnx-vcu.h	2023-04-14 12:24:18.661519400 +0900
@@ -36,4 +36,32 @@
 #define VCU_GASKET_INIT			0x74
 #define VCU_GASKET_VALUE		0x03
 
+/**
+ * struct xvcu_device - Xilinx VCU init device structure
+ * @dev: Platform device
+ * @pll_ref: pll ref clock source
+ * @reset_gpio: vcu reset gpio
+ * @aclk: axi clock source
+ * @logicore_reg_ba: logicore reg base address
+ * @vcu_slcr_ba: vcu_slcr Register base address
+ * @pll: handle for the VCU PLL
+ * @pll_post: handle for the VCU PLL post divider
+ * @clk_data: clocks provided by the vcu clock provider
+ */
+struct xvcu_device {
+	struct device *dev;
+	struct clk *pll_ref;
+	struct clk *aclk;
+	struct gpio_desc *reset_gpio;
+	struct regmap *logicore_reg_ba;
+	void __iomem *vcu_slcr_ba;
+	struct clk_hw *pll;
+	struct clk_hw *pll_post;
+	struct clk_hw_onecell_data *clk_data;
+};
+
+u32 xvcu_get_color_depth(struct xvcu_device *xvcu);
+u32 xvcu_get_memory_depth(struct xvcu_device *xvcu);
+u32 xvcu_get_clock_frequency(struct xvcu_device *xvcu);
+u32 xvcu_get_num_cores(struct xvcu_device *xvcu);
 #endif /* __XLNX_VCU_H */
